# This file is used to configure your project.
# Read more about the various options under:
# http://setuptools.readthedocs.io/en/latest/setuptools.html#configuring-setup-using-setup-cfg-files

[metadata]
name = upcheck
description = Collect website accessability metrics
author = Markus Binsteiner
author-email = markus@frkl.io
license = "The Parity Public License 6.0.0"
url = https://gitlab.com/frkl/upcheck
long-description = file: README.md
long-description-content-type = text/markdown
# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any
# Add here all kinds of additional classifiers as defined under
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers =
    Development Status :: 3 - Alpha
    Programming Language :: Python

[options]
zip_safe = False
packages = find:
include_package_data = True
package_dir =
    =src

setup_requires =
    setuptools_scm
    setuptools_scm_git_archive

install_requires =
    aiopg==1.0.0
    aiokafka==0.6.0
    avro==1.10.0
    asyncclick==7.0.9
    httpx==0.13.3
    ruamel.yaml==0.16.10
    rich==3.0.3
    tzlocal==2.1
    sortedcontainers==2.2.2
    logzero==1.5.0
    appdirs>=1.4.4

python_requires = >=3.6

[options.packages.find]
where = src
exclude =
    tests


[options.extras_require]
cli =
    asyncclick>=7.0.9
    uvloop==0.14.0; platform_system=="Linux"

testing =
    pytest
    pytest-cov
    tox
    flake8
    mypy
    pytest-httpserver


develop =
    flake8
    ipython
    black
    importanize
    pip-tools
    pre-commit
    watchdog
    wheel
    pipdeptree
    isort
    setuptools_scm
    cruft
    pp-ez
    mypy
    frtls

docs =
    portray
    livereload
    formic2
    mkdocs-material
    pymdown-extensions
    markdown-blockdiag
    markdown-include
    mkdocs-macros-plugin
    deepdiff

build =
    frtls
    frkl.jinja2schema
    jinja2>=2.10.3
    pp-ez
    setuptools==44.0.0

[options.entry_points]
console_scripts =
    upcheck = upcheck.interfaces.cli:cli

[test]
# py.test options when running `python setup.py test`
# addopts = --verbose
extras = True

[tool:pytest]
# Options for py.test:
# Specify command line options as you would do when invoking py.test directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
addopts =
    --cov upcheck --cov-report term-missing
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests
pep8maxlinelength = 88


[aliases]
build = bdist_wheel
release = build upload

[bdist_wheel]
# Use this option if your package is pure-python
universal = 1

[build_sphinx]
source_dir = docs
build_dir = docs/_build

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no-vcs = 1
formats = sdist, bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py
    .git
    __pycache__
ignore = F405, W503, E501
max-line-length = 88

[importanize]
after_imports_new_lines=2
length=88
exclude=
    .tox/*
    src/upcheck/interfaces/cli/__init__.py
groups=
    stdlib
    sitepackages
    remainder
    local

[mypy]
python_version = 3.8

[mypy-appdirs]
ignore_missing_imports = true

[mypy-asyncclick]
ignore_missing_imports = true

[mypy-asyncclick._bashcomplete]
ignore_missing_imports = true

[mypy-aiopg]
ignore_missing_imports = true

[mypy-uvloop]
ignore_missing_imports = true

[mypy-sortedcontainers]
ignore_missing_imports = true

[mypy-logzero]
ignore_missing_imports = true

[mypy-avro]
ignore_missing_imports = true

[mypy-avro.io]
ignore_missing_imports = true

[mypy-avro.schema]
ignore_missing_imports = true

[mypy-aiokafka]
ignore_missing_imports = true

[mypy-aiokafka.helpers]
ignore_missing_imports = true
